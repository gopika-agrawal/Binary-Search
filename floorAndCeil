int floor(vector<int>& arr,int n,int m){
	int ans = -1;
	int low = 0;
	int high = n - 1;
	while(low<=high){
		int mid = low + (high - low)/2;
		if(arr[mid]<=m){
			ans = arr[mid];
			low = mid+1;
		}
		else{
			high = mid - 1;
		}
	}
	return ans;
}
int ceil(vector<int>& arr,int n,int m){
	int ans = -1;
	int low = 0;
	int high = n-1;
	while(low<=high){
		int mid = low + (high - low)/2;
		if(arr[mid]>=m){
			ans = arr[mid];
			high = mid - 1;
		}
		else{
			low = mid + 1;
		}
	}
	return ans;
}
pair<int, int> getFloorAndCeil(vector<int> &a, int n, int x) {
	int ans1 = floor(a,n,x);
	int ans2 = ceil(a,n,x);
	return {ans1,ans2};
}
